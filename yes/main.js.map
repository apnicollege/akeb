{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/log-in/log-in.component.ts","./src/app/components/log-in/log-in.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/verify-registration/verify-registration.component.ts","./src/app/components/verify-registration/verify-registration.component.html","./src/app/service/register.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { VerifyRegistrationComponent } from './components/verify-registration/verify-registration.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'register' },\r\n  { path: 'info', component: LogInComponent },\r\n  { path: 'verify-registration', component: VerifyRegistrationComponent },\r\n  { path: 'register', component: RegisterComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-material-login-template';\r\n}\r\n","<!-- Toolbar -->\r\n<mat-toolbar color=\"primary\" class=\"app-header\">\r\n  <div><a routerLink=\"/\"  class=\"positronx\">AKEB</a></div>\r\n  <span class=\"nav-tool-items\">\r\n    <a mat-button routerLink=\"login\" routerLinkActive=\"active\">Webinars</a>\r\n    <a mat-button mat-raised-button routerLink=\"register\" routerLinkActive=\"active\">Register</a>\r\n  </span>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\n\r\n/* Routing */\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n/* Angular Material */\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\n/* FormsModule */\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n/* Angular Flex Layout */\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\n/* Components */\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { VerifyRegistrationComponent } from './components/verify-registration/verify-registration.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LogInComponent,\r\n    RegisterComponent,\r\n    RegisterComponent,\r\n    LogInComponent,\r\n    VerifyRegistrationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from 'src/app/model/user.model';\r\nimport { RegisterService } from 'src/app/service/register.service';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  registrationForm: FormGroup;\r\n  user : IUser = {};\r\n  successMsg : boolean = false;\r\n  errMsg : boolean = false;\r\n  constructor(private _registerService: RegisterService, private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this._registerService.user$.getValue() === null){\r\n        this.route.navigateByUrl(\"/register\");\r\n        return;\r\n    }\r\n    this.registrationForm = new FormGroup(\r\n      {\r\n        email: new FormControl({value: this._registerService.user$.getValue().email, disabled: true}),\r\n        name: new FormControl('', [Validators.required,Validators.maxLength(40)]),\r\n        qualification : new FormControl('', [Validators.required,Validators.maxLength(40)])\r\n        }\r\n    );\r\n  }\r\n\r\n  OnFormSubmit(){\r\n      this.user = this.registrationForm.value;\r\n      this.user.email = this._registerService.user$.getValue().email;\r\n      console.log(this.user);\r\n      //post user\r\n      this._registerService.postUser(this.user).subscribe(_data=>{\r\n        this._registerService.user$.next(this.user);\r\n        this.successMsg = true;\r\n      } ,\r\n      err=>{\r\n        this.successMsg = false;\r\n        this.errMsg = true;\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card class=\"box\">\r\n      <mat-card-header>\r\n        <mat-card-title>Please tell us more about yourself</mat-card-title>\r\n      </mat-card-header>\r\n\r\n\r\n      <form class=\"example-form\" (submit)=\"OnFormSubmit()\" [formGroup]=\"registrationForm\">\r\n\r\n        <mat-card-content>\r\n  <!--\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Username\">\r\n          </mat-form-field>\r\n  -->\r\n\r\n\r\n\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Name\" formControlName=\"name\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Qualification\" formControlName=\"qualification\">\r\n          </mat-form-field>\r\n\r\n  <!--\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Password\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Choose a role...</mat-label>\r\n            <mat-select>\r\n              <mat-option [value]=\"roles\" *ngFor=\"let roles of Roles\">{{roles}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n  -->\r\n        </mat-card-content>\r\n        <div *ngIf=\"!successMsg\">\r\n         <button mat-stroked-button color=\"accent\" class=\"btn-block\" [disabled]=\"!registrationForm.valid\">Register</button>\r\n        </div>\r\n\r\n        <BR> <BR>\r\n          <div *ngIf=\"successMsg\">\r\n          <mat-card-footer>Registration Success!! We will email you the invite for webinar. Thank you!!</mat-card-footer>\r\n          </div>\r\n\r\n          <div *ngIf=\"errMsg\">\r\n            <mat-card-footer>Something has gone wrong!! please try to register again. Sorry for the Inconvinience</mat-card-footer>\r\n            </div>\r\n\r\n      </form>\r\n    </mat-card>\r\n\r\n  </div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from 'src/app/model/user.model';\r\nimport {RegisterService} from '../../service/register.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  @ViewChild('recaptcha', {static: true }) recaptchaElement: ElementRef;\r\n  //Roles: any = ['Admin', 'Author', 'Reader'];\r\n  registrationForm: FormGroup;\r\n  token: string = '';\r\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\r\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\r\n  user : IUser = {};\r\n  constructor(private _registerService: RegisterService,private _snackBar: MatSnackBar,\r\n    private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.addRecaptchaScript();\r\n\r\n    this.registrationForm = new FormGroup(\r\n      {\r\n        email: new FormControl('', [Validators.required,\r\n          Validators.pattern(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/),\r\n\r\n          ]),\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  OnFormSubmit() {\r\n    if(this.token === ''){\r\n      this.openSnackBar();\r\n  }\r\n  else{\r\n      //check if the user exists\r\n     this._registerService.checkIfEmailExists(this.registrationForm.value.email)\r\n     .subscribe(_data=>{\r\n      this.user =  _data;\r\n      this._registerService.user$.next(this.user);\r\n      this.route.navigateByUrl('/verify-registration');\r\n     },\r\n     err=>{\r\n      this.user = this.registrationForm.value;\r\n      this._registerService.user$.next(this.user);\r\n      this.route.navigateByUrl('/info');\r\n     });\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  addRecaptchaScript() {\r\n\r\n    window['grecaptchaCallback'] = () => {\r\n      this.renderReCaptcha();\r\n    }\r\n\r\n    (function(d, s, id, obj){\r\n      var js, fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) { obj.renderReCaptcha(); return;}\r\n      js = d.createElement(s); js.id = id;\r\n      js.src = \"https://www.google.com/recaptcha/api.js?onload=grecaptchaCallback&render=explicit\";\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    }(document, 'script', 'recaptcha-jssdk', this));\r\n\r\n  }\r\n\r\n  renderReCaptcha() {\r\n    window['grecaptcha'].render(this.recaptchaElement.nativeElement, {\r\n      'sitekey' : '6Lde3MAaAAAAAJfHpNWiQTIAd6i_DDIpxOFG2lSt',\r\n      'callback': (response) => {\r\n          console.log(response);\r\n          this.token =response;\r\n          let formData: any = new FormData();\r\n          formData.append(\"secret\", \"6Lde3MAaAAAAAAeCDgZqhWlVyw0rOvFtR0Ocebev\");\r\n          formData.append(\"response\", this.token);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  openSnackBar() {\r\n    this._snackBar.open('please verify that you are not a robot', 'close', {\r\n      horizontalPosition: this.horizontalPosition,\r\n      verticalPosition: this.verticalPosition,\r\n    });\r\n  }\r\n}\r\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <mat-card-header>\r\n      <mat-card-title>Register for Webinars</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"example-form\" (submit)=\"OnFormSubmit()\" [formGroup]=\"registrationForm\">\r\n\r\n      <mat-card-content>\r\n<!--\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Username\">\r\n        </mat-form-field>\r\n-->\r\n\r\n\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n        </mat-form-field>\r\n\r\n        <div class=\"row mt-5\">\r\n          <div class=\"col-md-9 mx-auto\">\r\n\r\n              <div class=\"card mt-3\">\r\n                  <div class=\"card-body\">\r\n                      <div #recaptcha ></div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n<!--\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Password\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Choose a role...</mat-label>\r\n          <mat-select>\r\n            <mat-option [value]=\"roles\" *ngFor=\"let roles of Roles\">{{roles}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n-->\r\n      </mat-card-content>\r\n\r\n       <button mat-stroked-button color=\"accent\" class=\"btn-block\" [disabled]=\"!registrationForm.valid\">Start Registration</button>\r\n\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { IUser } from 'src/app/model/user.model';\nimport { RegisterService } from 'src/app/service/register.service';\n\n@Component({\n  selector: 'app-verify-registration',\n  templateUrl: './verify-registration.component.html',\n  styleUrls: ['./verify-registration.component.css']\n})\nexport class VerifyRegistrationComponent implements OnInit {\n\n  user : IUser;\n  constructor(private _registerService: RegisterService) { }\n\n  ngOnInit(): void {\n    this._registerService.user$.subscribe(_data=>{\n        this.user = _data;\n    });\n  }\n\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <mat-card class=\"box\">\n    <mat-card-header>\n      <mat-card-title>You are already registered</mat-card-title>\n    </mat-card-header>\n\n    <form class=\"example-form\">\n      <mat-card-content>\n        <mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Email\" value={{user.email}} disabled>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Name\" value={{user.name}} disabled>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Qualification\" value=\"{{user.qualification}}\" disabled>\n        </mat-form-field>\n        <BR> <BR>\n        <mat-card-footer>We will email you the invite for webinar. Thank you!!</mat-card-footer>\n\n      </mat-card-content>\n\n    </form>\n  </mat-card>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {ICaptchaResponse, IUser} from '../model/user.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  user : IUser;\n  public user$ = new BehaviorSubject<IUser>(null);\n  constructor(private http : HttpClient) { }\n\n  fetchDetails(email : string) : IUser{\n    return null;\n  }\n\n  verifyCaptcha(formData : FormData) : Observable<ICaptchaResponse>{\n    return this.http.post<ICaptchaResponse>('https://www.google.com/recaptcha/api/siteverify', formData);\n  }\n\n  checkIfEmailExists(email: string) : Observable<IUser>{\n     //call api and verify\n    return  this.http.get<IUser>('https://akeb.herokuapp.com/user/' + email);\n    //  let res : IUser =  {\n    //    \"id\" : 1,\n    //    \"name\" : \"imt\",\n    //    \"email\" : \"a@b.com\",\n    //    \"qualification\" : \"BE\"\n    //  };\n    //  return res;\n  }\n\n  postUser(user: IUser) : Observable<any>{\n    return this.http.post<any>('https://akeb.herokuapp.com/user/webinar/register',user);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}